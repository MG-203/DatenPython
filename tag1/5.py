import matplotlib.pyplot as plt
import pandas as pd
from matplotlib.ticker import MultipleLocator

df = pd.read_csv("spectrum_no_header.csv", sep=r"\s+", header=None, names=["Wellenzahl",
"Intensität"])
print(df)
df["Intensität"] = df["Intensität"] * 20
df2 = pd.read_csv("spectrum_no_header_2.csv", sep=r"\s+", header=None, names=["Wellenzahl",
"Intensität"])
print(df2)

# plt.plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1 x 20")
# plt.plot(df2["Wellenzahl"], df2["Intensität"], color="blue", label="Spektrum 2")
# plt.xlabel(r"Wellenzahl / cm$^{-1}$")
# plt.ylabel("Intensität / a.u.")
# plt.title(r"Schwingungsspektrum von C$_{120}^-$")
# plt.xlim((0,2000))
# plt.legend(loc="upper left")
# plt.show()

# fig, axs = plt.subplots(nrows=2, ncols=1, sharex=True)
# axs[0].plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1 x20")
# axs[1].plot(df2["Wellenzahl"], df2["Intensität"], color="blue", label="Spektrum 2")
# axs[1].set_xlabel(r"Wellenzahl / cm$^{-1}$")
# axs[0].set_ylabel("Intensität / a.u.")
# axs[1].set_ylabel("Intensität / a.u.")
# axs[1].set_xlim((0,2000))
# axs[0].legend()
# axs[1].legend()
# plt.show()

df3 = pd.read_csv("spectrum3.csv", sep=r"\s+", header=None, names=["Wellenzahl",
"Intensität"])
print(df3)
df4 = pd.read_csv("spectrum4.csv", sep=r"\s+", header=None, names=["Wellenzahl",
"Intensität"])
print(df4)

# plt.plot(df3["Wellenzahl"], df3["Intensität"], color="green", label="Spektrum 1")
# plt.plot(df4["Wellenzahl"], df4["Intensität"], color="orange", label="Spektrum 2")
# plt.xlabel(r"Wellenzahl / cm$^{-1}$")
# plt.ylabel("Intensität / a.u.")
# plt.title(r"Schwingungsspektrum von C$_{120}^-$")
# plt.xlim((0,2000))
# plt.legend(loc="upper left")
# plt.show()


#a)
# fig, axs = plt.subplots(nrows=4, ncols=1, sharex=True)
# axs[0].plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1 x20")
# axs[1].plot(df2["Wellenzahl"], df2["Intensität"], color="blue", label="Spektrum 2")
# axs[2].plot(df2["Wellenzahl"], df2["Intensität"], color="green", label="Spektrum 3")
# axs[3].plot(df2["Wellenzahl"], df2["Intensität"], color="orange", label="Spektrum 4")
# axs[3].set_xlabel(r"Wellenzahl / cm$^{-1}$")
# axs[0].set_ylabel("Intensität / a.u.")
# axs[1].set_ylabel("Intensität / a.u.")
# axs[2].set_ylabel("Intensität / a.u.")
# axs[3].set_ylabel("Intensität / a.u.")
# axs[1].set_xlim((0,2000))
# axs[0].legend()
# axs[1].legend()
# axs[2].legend()
# axs[3].legend()
# plt.show()

#b)
# plt.plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1 x 20")
# plt.plot(df2["Wellenzahl"], df2["Intensität"], color="blue", label="Spektrum 2")
# plt.plot(df3["Wellenzahl"], df3["Intensität"], color="green", label="Spektrum 3")
# plt.plot(df4["Wellenzahl"], df4["Intensität"], color="orange", label="Spektrum 4")
# plt.xlabel(r"Wellenzahl / cm$^{-1}$")
# plt.ylabel("Intensität / a.u.")
# plt.title(r"Schwingungsspektrum von C$_{120}^-$")
# plt.xlim((0,2000))
# plt.legend(loc="upper left")
# plt.show()

# c)
# fig, axs = plt.subplots(nrows=2, ncols=2, sharex=True)
# axs[0,0].plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1 x20")
# axs[1,0].plot(df2["Wellenzahl"], df2["Intensität"], color="blue", label="Spektrum 2")
# axs[0,1].plot(df3["Wellenzahl"], df3["Intensität"], color="green", label="Spektrum 3")
# axs[1,1].plot(df4["Wellenzahl"], df4["Intensität"], color="orange", label="Spektrum 4")
# axs[0,0].set_xlabel(r"Wellenzahl / cm$^{-1}$")
# axs[0,1].set_xlabel(r"Wellenzahl / cm$^{-1}$")
# axs[1,0].set_xlabel(r"Wellenzahl / cm$^{-1}$")
# axs[1,1].set_xlabel(r"Wellenzahl / cm$^{-1}$")
# axs[0,0].set_ylabel("Intensität / a.u.")
# axs[1,0].set_ylabel("Intensität / a.u.")
# axs[0,0].set_ylabel("Intensität / a.u.")
# axs[0,1].set_ylabel("Intensität / a.u.")
# axs[1,0].set_xlim((0,2000))
# axs[0,0].legend(loc="upper left")
# axs[1,0].legend()
# axs[0,1].legend()
# axs[1,1].legend()
# plt.show()

#15)
fig, axs = plt.subplots(nrows=1, ncols=1, sharex=True)
axs.plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1 x20")
# axs[1].plot(df2["Wellenzahl"], df2["Intensität"], color="blue", label="Spektrum 2")
axs.set_xlim((0,2000))
axs.legend()
axs.xaxis.set_major_locator(MultipleLocator(500))
axs.xaxis.set_minor_locator(MultipleLocator(100))
axs.yaxis.set_major_locator(MultipleLocator(1e-17))
axs.yaxis.set_minor_locator(MultipleLocator(2e-18))
plt.show()

#16)
# plt.rcParams.update({"axes.linewidth": 20})
# plt.plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1 x 20")
# plt.plot(df2["Wellenzahl"], df2["Intensität"], color="blue", label="Spektrum 2")
# plt.xlabel(r"Wellenzahl / cm$^{-1}$")
# plt.ylabel("Intensität / a.u.")
# plt.title(r"Schwingungsspektrum von C$_{120}^-$")
# plt.xlim((0,2000))
# plt.legend(loc="upper left")
# print(plt.rcParams)
# plt.show()

# from mpl_toolkits.axes_grid1.inset_locator import inset_axes
# fig, ax = plt.subplots()
# inset_ax = inset_axes(parent_axes=ax, width="40%", height="40%", loc="upper left",
# borderpad=2.5)
# inset_ax.set_xlim((0,2000))
# ax.plot(df["Wellenzahl"], df["Intensität"], color="red", label="Spektrum 1")
# ax.set_xlabel(r"Wellenzahl / cm$^{-1}$")
# ax.set_ylabel("Intensität / a.u.")
# ax.set_xlim((0,2000))
# ax.legend()
# inset_ax.plot(df2["Wellenzahl"], df2["Intensität"], color="blue",   label="Spektrum 2")
# inset_ax.plot(df3["Wellenzahl"], df3["Intensität"], color="green",  label="Spektrum 3")
# inset_ax.plot(df4["Wellenzahl"], df4["Intensität"], color="orange", label="Spektrum 4")
# ax.xaxis.set_major_locator(MultipleLocator(500))
# ax.xaxis.set_minor_locator(MultipleLocator(100))
# ax.yaxis.set_minor_locator(MultipleLocator(1e-19))
# plt.show()